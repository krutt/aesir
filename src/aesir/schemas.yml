builds:
  aesir-bitcoind:
    instructions:
      - FROM debian:stable-slim AS builder
      - RUN apt-get update
      - RUN apt-get install -y autoconf bsdmainutils build-essential ccache clang git libboost-all-dev libtool libzmq3-dev pkg-config 
      - WORKDIR /usr
      - RUN mkdir ~/.ccache && echo "max_size = 50.0G\nbase_dir = /usr/bitcoin\n" > ~/.ccache/ccache.conf
      - RUN git clone --depth 1 https://github.com/bitcoin/bitcoin.git
      - RUN cd bitcoin && git fetch origin --tags && git checkout tags/v27.1
      - RUN cd bitcoin && ./autogen.sh
      - RUN cd bitcoin && ./configure CC="clang" CXX="clang++"
      - RUN cd bitcoin && make -j"$(($(nproc)+1))" src/bitcoind src/bitcoin-cli
      - FROM debian:stable-slim AS runner
      - WORKDIR /usr/app
      - RUN apt-get update
      - RUN apt-get install -y libevent-dev libzmq3-dev
      - COPY --from=builder /usr/bitcoin/src/bitcoind /usr/app/bitcoind
      - COPY --from=builder /usr/bitcoin/src/bitcoin-cli /usr/app/bitcoin-cli
      - ENV PATH=$PATH:/usr/app
      - RUN mkdir -p /home/bitcoin/.bitcoin
      - VOLUME [ "/home/bitcoin/.bitcoin" ]
      - EXPOSE 18443 18444 28334 28335
      - ENTRYPOINT ["/usr/app/bitcoind"]
  aesir-bitcoind-cat:
    instructions:
      - FROM debian:stable-slim AS builder
      - RUN apt-get update
      - RUN apt-get install -y autoconf bsdmainutils build-essential ccache clang git libboost-all-dev libtool pkg-config
      - WORKDIR /usr
      - RUN mkdir ~/.ccache && echo "max_size = 50.0G\nbase_dir = /usr/bitcoin\n" > ~/.ccache/ccache.conf
      - RUN git clone --depth 1 --branch dont-success-cat https://github.com/rot13maxi/bitcoin.git
      - RUN cd bitcoin && ./autogen.sh && ./configure CC="clang" CXX="clang++" && make -j"$(($(nproc)+1))" src/bitcoind src/bitcoin-cli
      - FROM debian:stable-slim AS runner
      - WORKDIR /usr/app
      - RUN apt-get update
      - RUN apt-get install -y libevent-dev
      - COPY --from=builder /usr/bitcoin/src/bitcoind /usr/app/bitcoind
      - COPY --from=builder /usr/bitcoin/src/bitcoin-cli /usr/app/bitcoin-cli
      - ENV PATH=$PATH:/usr/app
      - RUN mkdir -p /home/bitcoin/.bitcoin
      - VOLUME ["/home/bitcoin/.bitcoin"]
      - EXPOSE 18443 18444 28334 28335
      - ENTRYPOINT ["/usr/app/bitcoind"]
  aesir-cashu-mint:
    instructions:
      - FROM python:3.13.2-slim AS builder
      - RUN apt-get update -y
      - RUN apt-get install -y --no-install-recommends automake build-essential curl g++ gcc git pkg-config
      - RUN curl --proto '=https' --tlsv1.2 -LsSf https://github.com/astral-sh/uv/releases/download/0.8.22/uv-installer.sh | sh
      - ENV PATH=$PATH:/root/.local/bin
      - WORKDIR /usr/src
      - RUN git clone --branch main https://github.com/cashubtc/nutshell.git
      - WORKDIR /usr/src/nutshell
      - RUN git reset --hard 67b7ea6
      - RUN echo 3.13.2 > .python-version && uv venv --python-preference system
      - RUN sed -i 's/authors\s=\s\[.*\]/authors = []/g' pyproject.toml
      - RUN sed -i 's/^\[tool\.poetry\]$/[project]/g' pyproject.toml
      - RUN sed -i 's/^\[tool\.poetry\.scripts\]$/[project.scripts]/g' pyproject.toml
      - RUN sed -i 's/^build-backend\s=\s"poetry\.core\.masonry\.api"$/build-backend = "uv_build"/g' pyproject.toml
      - RUN sed -i 's/^requires\s=\s\["poetry-core>=1\.0\.0"\]$/requires = ["uv_build"]/g' pyproject.toml
      - RUN echo '\n[tool.uv.build-backend]\nmodule-name = "cashu"\nmodule-root = ""\n' >> pyproject.toml
      - RUN uv add -r requirements.txt
      - RUN uv sync --frozen --no-dev
      - RUN apt-get purge -y automake build-essential g++ gcc git
      - ENV PATH=$PATH:/usr/src/nutshell/.venv/bin
      - EXPOSE 3338
      - ENTRYPOINT [ "mint" ]
  aesir-electrs:
    instructions:
      - FROM rust:1.90.0-slim-bullseye AS builder
      - ENV ELECTRS_VERSION=0.10.10
      - WORKDIR /build
      - RUN apt-get update
      - RUN apt-get install -y git clang cmake libsnappy-dev netcat
      - RUN git clone --branch v$ELECTRS_VERSION https://github.com/romanz/electrs .
      - ENV CARGO_NET_GIT_FETCH_WITH_CLI true
      - RUN cargo install --locked --path .
      - FROM debian:bullseye-slim AS runner
      - WORKDIR /data
      - COPY --from=builder /usr/bin/netcat /usr/bin/netcat
      - COPY --from=builder /usr/local/cargo/bin/electrs /bin/electrs
      - EXPOSE 4224 50001
      - STOPSIGNAL SIGINT
      - ENTRYPOINT ["electrs"]
  aesir-litd:
    instructions:
      - FROM golang:1.24.6-alpine3.22 AS builder
      - ENV GODEBUG netdns=cgo
      - RUN apk add --no-cache --update alpine-sdk git make
      - WORKDIR /usr/src
      - RUN git clone https://github.com/lightninglabs/lightning-terminal
      - WORKDIR /usr/src/lightning-terminal
      - RUN make go-install
      - RUN make go-install-cli
      - FROM alpine:3.22.1 AS runner
      - COPY --from=builder /go/bin/litd /bin/
      - COPY --from=builder /go/bin/litcli /bin/
      - EXPOSE 8443
      - VOLUME /root/.lnd
      - ENTRYPOINT ["litd"]
  aesir-lnd:
    instructions:
      - FROM debian:stable-slim
      - ENV LND_VERSION=0.19.0-beta
      - WORKDIR /usr/app
      - RUN apt-get update -y
      - RUN apt-get install -y curl wait-for-it
      - RUN curl -SLO https://github.com/lightningnetwork/lnd/releases/download/v$LND_VERSION/lnd-linux-arm64-v$LND_VERSION.tar.gz
      - RUN tar -xzf lnd-linux-arm64-v$LND_VERSION.tar.gz
      - RUN mv lnd-linux-arm64-v$LND_VERSION/lnd lnd
      - RUN mv lnd-linux-arm64-v$LND_VERSION/lncli lncli
      - RUN rm lnd-linux-arm64-v$LND_VERSION.tar.gz
      - RUN rm -rf lns-linux-arm64-v$LND_VERSION
      - RUN curl -SLO https://raw.githubusercontent.com/lightningnetwork/lnd/master/contrib/lncli.bash-completion
      - RUN mkdir -p /etc/bash_completion.d
      - RUN mv lncli.bash-completion /etc/bash_completion.d/lncli.bash-completion
      - RUN curl -SLO https://raw.githubusercontent.com/scop/bash-completion/master/bash_completion
      - RUN mv bash_completion /usr/share/bash-completion/bash_completion
      - RUN bash /usr/share/bash-completion/bash_completion
      - ENV PATH=$PATH:/usr/app
      - VOLUME [ "/root/.lnd" ]
      - EXPOSE 8080 9735 10009
      - ENTRYPOINT [ "lnd" ]
  aesir-ord-server:
    instructions:
      - FROM rust:1.89.0-bookworm AS builder
      - WORKDIR /usr/src
      - RUN apt-get install -y git
      - RUN git clone --branch master --depth=1 https://github.com/ordinals/ord.git
      - WORKDIR /usr/src/ord
      - RUN cargo build --bin ord --release
      - FROM debian:bookworm-slim AS runner
      - COPY --from=builder /usr/src/ord/target/release/ord /usr/local/bin
      - RUN apt-get update && apt-get install -y curl openssl
      - ENV RUST_BACKTRACE=1
      - ENV RUST_LOG=info
      - ENTRYPOINT [ "ord" ]
clusters:
  cat:
    aesir-bitcoind:
      command: &bitcoindFlags
        0: -blockfilterindex=1
        1: -datadir=/home/bitcoin/.bitcoin
        2: -debug=1
        3: -dnsseed=0
        4: -fallbackfee=0.0002
        5: -listen=1
        6: -listenonion=0
        7: -peerblockfilters=1
        8: -regtest=1
        9: -rest
        10: -rpcallowip=0.0.0.0/0
        11: -rpcauth=aesir:0a17eed40accdd0f2271a548547ec9bb$b269b686f2ad7ccf0b5ea3450e0687dc1a90846d3828811ad0d570de83b65f4c
        12: -rpcbind=0.0.0.0
        13: -rpcport=18443
        14: -rpcworkqueue=128
        15: -server=1
        16: -txindex=1
        17: -upnp=0
        18: -zmqpubhashblock=tcp://0.0.0.0:28336
        19: -zmqpubrawblock=tcp://0.0.0.0:28334
        20: -zmqpubrawtx=tcp://0.0.0.0:28335
      image: aesir-bitcoind-cat
      ports:
        - 18443:18443
        - 28334:28334
        - 28335:28335
  duo:
    aesir-bitcoind:
      command:
        <<: *bitcoindFlags
      image: aesir-bitcoind
      ports:
        - 18443:18443
        - 28334:28334
        - 28335:28335
    aesir-ping:
      command: &lndFlags
        0: --noseedbackup
        1: --trickledelay=5000
        2: --externalip=aesir-ping
        3: --tlsextradomain=aesir-ping
        4: --listen=0.0.0.0:9735
        5: --rpclisten=0.0.0.0:10009
        6: --restlisten=0.0.0.0:8080
        7: --bitcoin.regtest
        8: --bitcoin.node=bitcoind
        9: --bitcoind.rpchost=aesir-bitcoind
        10: --bitcoind.rpcuser=aesir
        11: --bitcoind.rpcpass=aesir
        12: --bitcoind.zmqpubrawblock=tcp://aesir-bitcoind:28334
        13: --bitcoind.zmqpubrawtx=tcp://aesir-bitcoind:28335
      image: aesir-lnd
      ports:
        - 8080:8080
        - 9735:9735
        - 10009:10009
    aesir-pong:
      command:
        <<: *lndFlags
        2: --externalip=aesir-pong
        3: --tlsextradomain=aesir-pong
      image: aesir-lnd
      ports:
        - 8080:8081
        - 9735:9736
        - 10009:10010
  ohm:
    aesir-bitcoind:
      command:
        <<: *bitcoindFlags
      image: aesir-bitcoind
      ports:
        - 18443:18443
        - 28334:28334
        - 28335:28335
  uno:
    aesir-bitcoind:
      command:
        <<: *bitcoindFlags
      image: aesir-bitcoind
      ports:
        - 18443:18443
        - 28334:28334
        - 28335:28335
    aesir-lnd:
      command:
        <<: *lndFlags
        2: --externalip=aesir-lnd
        3: --tlsextradomain=aesir-lnd
      image: aesir-lnd
      ports:
        - 8080:8080
        - 9735:9735
        - 10009:10009
network: aesir
peripherals:
  aesir-cashu-mint:
    env_vars:
      - MINT_LIGHTNING_BACKEND=LndRestWallet
      - MINT_LISTEN_HOST=0.0.0.0
      - MINT_LISTEN_PORT=3338
      - MINT_LND_REST_CERT=/root/.lnd/tls.cert
      - MINT_LND_REST_ENDPOINT=aesir-lnd:8080
      - MINT_LND_REST_MACAROON=/root/.lnd/data/chain/bitcoin/regtest/admin.macaroon
      - MINT_PRIVATE_KEY=aesir
    image: aesir-cashu-mint
    ports:
      - 3338:3338
  aesir-electrs:
    command:
      0: --daemon-dir=/home/bitcoin/.bitcoin
      1: --daemon-rpc-addr=aesir-bitcoind:18443
      2: --daemon-p2p-addr=aesir-bitcoind:18444
      3: --electrum-rpc-addr=0.0.0.0:50001
      4: --log-filters=INFO
      5: --network=regtest
    image: aesir-electrs
    ports:
      - 4224:4224
      - 50001:50001
  aesir-ord-server:
    command:
      0: --bitcoin-rpc-url=aesir-bitcoind:18443
      1: --chain=regtest
      2: --cookie-file=/home/bitcoin/.bitcoin/regtest/.cookie
      3: server
      4: --http-port=8080
    image: aesir-ord-server
    env_vars:
      - ORD_BITCOIN_RPC_PASS=aesir
      - ORD_BITCOIN_RPC_USER=aesir
    ports:
      - 8080:8081
  aesir-litd:
    command:
      0: --autopilot.disable
      1: --lit-dir=/root/.lit
      2: --lnd-mode=remote
      3: --lnd.rpclisten=aesir-lnd
      4: --network=regtest
      5: --remote.lnd.rpcserver=aesir-lnd:10009
      6: --remote.lnd.macaroonpath=/root/.lnd/data/chain/bitcoin/regtest/admin.macaroon
      7: --remote.lnd.tlscertpath=/root/.lnd/tls.cert
      8: --uipassword=heimdall
    image: aesir-litd
    ports:
      - 8443:8443
  aesir-postgres:
    image: postgres:latest
    env_vars:
      - POSTGRES_USER=aesir
      - POSTGRES_PASSWORD=aesir
    ports:
      - 5432:5432
  aesir-redis:
    image: redis:latest
    ports:
      - 6379:6379
